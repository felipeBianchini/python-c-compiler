
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightNOTnonassocEQUALNOT_EQUALGREATERLESSGREATER_EQUALLESS_EQUALleftPLUSMINUSleftMULDIVINT_DIVMODrightPOWADD_ASSIGN AND ASSIGN BREAK CLASS COLON COMMA CONTINUE DEF DENT DIV DIV_ASSIGN DOT ELIF ELSE EQUAL FALSE FLOAT FOR GREATER GREATER_EQUAL ID IF IN INDENT INTEGER INT_DIV INT_DIV_ASSIGN ITER LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MOD MOD_ASSIGN MUL MULTISTRING MUL_ASSIGN NEWLINE NEXT NONE NOT NOT_EQUAL OR PASS PLUS POW POW_ASSIGN PRINT RANGE RBRACE RBRACKET RETURN RPAREN SELF SEMICOLON STR STRING SUB_ASSIGN TRUE WHILE __INIT__program : complete_sentence program\n| complete_sentence\nempty :optional_newline : optional_newline NEWLINE\n| NEWLINE\n| emptydata_type : ret_value_operation\n| string_concat\n| function_call\n| NONE\nref_data_type : ID\n| class_atribute_use         \nnumber : INTEGER \n| FLOATstring : MULTISTRING\n| STRING\n| number_to_string\narithmetic_symbol : PLUS \n| MINUS\n| MUL \n| DIV \n| INT_DIV \n| MOD \n| POWassignment_symbol : ADD_ASSIGN \n| SUB_ASSIGN \n| MUL_ASSIGN \n| DIV_ASSIGN \n| MOD_ASSIGN \n| INT_DIV_ASSIGN \n| POW_ASSIGNrelational_symbol : EQUAL \n| NOT_EQUAL \n| GREATER \n| LESS \n| GREATER_EQUAL \n| LESS_EQUALbinary_logical_operator : AND \n| ORconditional_operator : TRUE \n| FALSEsentence : function\n| class\n| return\n| function_call\n| operation\ncomplete_sentence : sentencecomplete_sentences : complete_sentence complete_sentences\n| complete_sentence            \noperation : assignment_operation \n| simple_assignment_operation \nsimple_assignment_operation : ref_data_type ASSIGN data_type\n        assignment_operation : ID assignment_symbol numberret_value_operation : ret_value_operation arithmetic_symbol ret_value_operation\n| ret_value_operation binary_logical_operator ret_value_operation\n| LPAREN ret_value_operation RPAREN\n| NOT ret_value_operation\n| number\n| ref_data_type\nrelational_operation : LPAREN relational_operation RPAREN\n| data_type relational_symbol data_type\nterm : relational_operation\n| ref_data_type\n| conditional_operator\nnumber_to_string : STR LPAREN number RPARENstring_concat : string_concat PLUS string\n| string\nargument : data_type\n| ID COLON data_type\narguments : argument\n| arguments COMMA argument\n| empty\nfunction_call : ID LPAREN arguments RPAREN\n| class_atribute_use LPAREN arguments RPAREN\nreturn : RETURN\n| RETURN data_type\noptional_return : return\n| empty\noptional_function_body : complete_sentences\n| empty\nfunction : DEF ID LPAREN arguments RPAREN COLON NEWLINE INDENT optional_function_body optional_return DENTclass_arguments : SELF COMMA arguments\n| SELF\nclass_atribute_use : SELF DOT IDclass_method : DEF __INIT__ LPAREN class_arguments RPAREN COLON NEWLINE INDENT complete_sentences DENT\n| DEF ID LPAREN class_arguments RPAREN COLON NEWLINE INDENT optional_function_body optional_return DENT\nclass_part : class_method\n        class_body : class_body class_part\n| class_part\nclass : CLASS ID COLON NEWLINE INDENT class_body DENT'
    
_lr_action_items = {'DEF':([0,2,3,4,5,6,7,8,12,13,14,15,30,31,32,33,34,37,38,39,40,41,42,43,44,45,56,71,72,73,76,77,80,83,84,85,86,88,92,93,95,96,97,100,101,104,110,121,127,128,131,133,],[9,9,-47,-42,-43,-44,-45,-46,-75,-12,-50,-51,-76,-7,-8,-9,-10,-58,-59,-67,-11,-13,-14,-15,-16,-17,-53,-11,-12,-57,-84,-52,-73,-54,-55,-66,-56,-74,98,-65,98,-89,-87,-90,-88,9,9,-81,9,9,-85,-86,]),'CLASS':([0,2,3,4,5,6,7,8,12,13,14,15,30,31,32,33,34,37,38,39,40,41,42,43,44,45,56,71,72,73,76,77,80,83,84,85,86,88,93,100,104,110,121,127,128,],[11,11,-47,-42,-43,-44,-45,-46,-75,-12,-50,-51,-76,-7,-8,-9,-10,-58,-59,-67,-11,-13,-14,-15,-16,-17,-53,-11,-12,-57,-84,-52,-73,-54,-55,-66,-56,-74,-65,-90,11,11,-81,11,11,]),'RETURN':([0,2,3,4,5,6,7,8,12,13,14,15,30,31,32,33,34,37,38,39,40,41,42,43,44,45,56,71,72,73,76,77,80,83,84,85,86,88,93,100,104,107,108,109,110,117,121,127,128,130,],[12,12,-47,-42,-43,-44,-45,-46,-75,-12,-50,-51,-76,-7,-8,-9,-10,-58,-59,-67,-11,-13,-14,-15,-16,-17,-53,-11,-12,-57,-84,-52,-73,-54,-55,-66,-56,-74,-65,-90,12,12,-79,-80,12,-48,-81,12,12,12,]),'ID':([0,2,3,4,5,6,7,8,9,11,12,13,14,15,20,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,56,58,59,60,61,62,63,64,65,66,67,68,71,72,73,76,77,79,80,81,83,84,85,86,88,93,98,100,104,110,119,121,127,128,],[10,10,-47,-42,-43,-44,-45,-46,19,29,40,-12,-50,-51,51,-76,-7,-8,-9,-10,71,71,-58,-59,-67,-11,-13,-14,-15,-16,-17,51,76,40,51,-53,71,71,-18,-19,-20,-21,-22,-23,-24,-38,-39,-11,-12,-57,-84,-52,40,-73,51,-54,-55,-66,-56,-74,-65,103,-90,10,10,51,-81,10,10,]),'SELF':([0,2,3,4,5,6,7,8,12,13,14,15,20,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,56,58,59,60,61,62,63,64,65,66,67,68,71,72,73,76,77,79,80,81,83,84,85,86,88,93,100,104,105,106,110,119,121,127,128,],[16,16,-47,-42,-43,-44,-45,-46,16,-12,-50,-51,16,-76,-7,-8,-9,-10,16,16,-58,-59,-67,-11,-13,-14,-15,-16,-17,16,16,16,-53,16,16,-18,-19,-20,-21,-22,-23,-24,-38,-39,-11,-12,-57,-84,-52,16,-73,16,-54,-55,-66,-56,-74,-65,-90,16,112,112,16,16,-81,16,16,]),'$end':([1,2,3,4,5,6,7,8,12,13,14,15,18,30,31,32,33,34,37,38,39,40,41,42,43,44,45,56,71,72,73,76,77,80,83,84,85,86,88,93,100,121,],[0,-2,-47,-42,-43,-44,-45,-46,-75,-12,-50,-51,-1,-76,-7,-8,-9,-10,-58,-59,-67,-11,-13,-14,-15,-16,-17,-53,-11,-12,-57,-84,-52,-73,-54,-55,-66,-56,-74,-65,-90,-81,]),'DENT':([3,4,5,6,7,8,12,13,14,15,30,31,32,33,34,37,38,39,40,41,42,43,44,45,56,71,72,73,76,77,80,83,84,85,86,88,93,95,96,97,100,101,104,107,108,109,110,114,115,116,117,121,128,129,130,131,132,133,],[-47,-42,-43,-44,-45,-46,-75,-12,-50,-51,-76,-7,-8,-9,-10,-58,-59,-67,-11,-13,-14,-15,-16,-17,-53,-11,-12,-57,-84,-52,-73,-54,-55,-66,-56,-74,-65,100,-89,-87,-90,-88,-3,-3,-79,-80,-49,121,-77,-78,-48,-81,-3,131,-3,-85,133,-86,]),'LPAREN':([10,12,13,19,20,35,36,40,46,47,49,50,51,58,59,60,61,62,63,64,65,66,67,68,76,79,81,102,103,119,],[20,35,47,50,35,35,35,20,74,35,35,35,20,35,35,-18,-19,-20,-21,-22,-23,-24,-38,-39,-84,35,35,105,106,35,]),'ASSIGN':([10,13,17,76,],[-11,-12,49,-84,]),'ADD_ASSIGN':([10,],[22,]),'SUB_ASSIGN':([10,],[23,]),'MUL_ASSIGN':([10,],[24,]),'DIV_ASSIGN':([10,],[25,]),'MOD_ASSIGN':([10,],[26,]),'INT_DIV_ASSIGN':([10,],[27,]),'POW_ASSIGN':([10,],[28,]),'NONE':([12,20,47,49,50,79,81,119,],[34,34,34,34,34,34,34,34,]),'NOT':([12,20,35,36,47,49,50,58,59,60,61,62,63,64,65,66,67,68,79,81,119,],[36,36,36,36,36,36,36,36,36,-18,-19,-20,-21,-22,-23,-24,-38,-39,36,36,36,]),'INTEGER':([12,20,21,22,23,24,25,26,27,28,35,36,47,49,50,58,59,60,61,62,63,64,65,66,67,68,74,79,81,119,],[41,41,41,-25,-26,-27,-28,-29,-30,-31,41,41,41,41,41,41,41,-18,-19,-20,-21,-22,-23,-24,-38,-39,41,41,41,41,]),'FLOAT':([12,20,21,22,23,24,25,26,27,28,35,36,47,49,50,58,59,60,61,62,63,64,65,66,67,68,74,79,81,119,],[42,42,42,-25,-26,-27,-28,-29,-30,-31,42,42,42,42,42,42,42,-18,-19,-20,-21,-22,-23,-24,-38,-39,42,42,42,42,]),'MULTISTRING':([12,20,47,49,50,69,79,81,119,],[43,43,43,43,43,43,43,43,43,]),'STRING':([12,20,47,49,50,69,79,81,119,],[44,44,44,44,44,44,44,44,44,]),'STR':([12,20,47,49,50,69,79,81,119,],[46,46,46,46,46,46,46,46,46,]),'PLUS':([13,31,32,37,38,39,40,41,42,43,44,45,51,70,71,72,73,76,83,84,85,86,93,],[-12,60,69,-58,-59,-67,-11,-13,-14,-15,-16,-17,-11,60,-11,-12,60,-84,60,60,-66,-56,-65,]),'MINUS':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,61,-58,-59,-11,-13,-14,-11,61,-11,-12,61,-84,61,61,-56,]),'MUL':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,62,-58,-59,-11,-13,-14,-11,62,-11,-12,62,-84,62,62,-56,]),'DIV':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,63,-58,-59,-11,-13,-14,-11,63,-11,-12,63,-84,63,63,-56,]),'INT_DIV':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,64,-58,-59,-11,-13,-14,-11,64,-11,-12,64,-84,64,64,-56,]),'MOD':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,65,-58,-59,-11,-13,-14,-11,65,-11,-12,65,-84,65,65,-56,]),'POW':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,66,-58,-59,-11,-13,-14,-11,66,-11,-12,66,-84,66,66,-56,]),'AND':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,67,-58,-59,-11,-13,-14,-11,67,-11,-12,-57,-84,67,67,-56,]),'OR':([13,31,37,38,40,41,42,51,70,71,72,73,76,83,84,86,],[-12,68,-58,-59,-11,-13,-14,-11,68,-11,-12,-57,-84,68,68,-56,]),'RPAREN':([13,20,31,32,33,34,37,38,39,40,41,42,43,44,45,47,50,51,52,53,54,55,70,71,72,73,75,76,78,80,83,84,85,86,87,88,90,91,93,111,112,113,119,123,],[-12,-3,-7,-8,-9,-10,-58,-59,-67,-11,-13,-14,-15,-16,-17,-3,-3,-11,80,-70,-72,-68,86,-11,-12,-57,88,-84,89,-73,-54,-55,-66,-56,93,-74,-69,-71,-65,118,-83,120,-3,-82,]),'COMMA':([13,20,31,32,33,34,37,38,39,40,41,42,43,44,45,47,50,51,52,53,54,55,71,72,73,75,76,78,80,83,84,85,86,88,90,91,93,112,119,123,],[-12,-3,-7,-8,-9,-10,-58,-59,-67,-11,-13,-14,-15,-16,-17,-3,-3,-11,81,-70,-72,-68,-11,-12,-57,81,-84,81,-73,-54,-55,-66,-56,-74,-69,-71,-65,119,-3,81,]),'DOT':([16,],[48,]),'COLON':([29,51,89,118,120,],[57,79,94,122,124,]),'NEWLINE':([57,94,122,124,],[82,99,125,126,]),'INDENT':([82,99,125,126,],[92,104,127,128,]),'__INIT__':([98,],[102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,18,]),'complete_sentence':([0,2,104,110,127,128,],[2,2,110,110,110,110,]),'sentence':([0,2,104,110,127,128,],[3,3,3,3,3,3,]),'function':([0,2,104,110,127,128,],[4,4,4,4,4,4,]),'class':([0,2,104,110,127,128,],[5,5,5,5,5,5,]),'return':([0,2,104,107,110,127,128,130,],[6,6,6,115,6,6,6,115,]),'function_call':([0,2,12,20,47,49,50,79,81,104,110,119,127,128,],[7,7,33,33,33,33,33,33,33,7,7,33,7,7,]),'operation':([0,2,104,110,127,128,],[8,8,8,8,8,8,]),'class_atribute_use':([0,2,12,20,35,36,47,49,50,58,59,79,81,104,110,119,127,128,],[13,13,13,13,72,72,13,13,13,72,72,13,13,13,13,13,13,13,]),'assignment_operation':([0,2,104,110,127,128,],[14,14,14,14,14,14,]),'simple_assignment_operation':([0,2,104,110,127,128,],[15,15,15,15,15,15,]),'ref_data_type':([0,2,12,20,35,36,47,49,50,58,59,79,81,104,110,119,127,128,],[17,17,38,38,38,38,38,38,38,38,38,38,38,17,17,38,17,17,]),'assignment_symbol':([10,],[21,]),'data_type':([12,20,47,49,50,79,81,119,],[30,55,55,77,55,90,55,55,]),'ret_value_operation':([12,20,35,36,47,49,50,58,59,79,81,119,],[31,31,70,73,31,31,31,83,84,31,31,31,]),'string_concat':([12,20,47,49,50,79,81,119,],[32,32,32,32,32,32,32,32,]),'number':([12,20,21,35,36,47,49,50,58,59,74,79,81,119,],[37,37,56,37,37,37,37,37,37,37,87,37,37,37,]),'string':([12,20,47,49,50,69,79,81,119,],[39,39,39,39,39,85,39,39,39,]),'number_to_string':([12,20,47,49,50,69,79,81,119,],[45,45,45,45,45,45,45,45,45,]),'arguments':([20,47,50,119,],[52,75,78,123,]),'argument':([20,47,50,81,119,],[53,53,53,91,53,]),'empty':([20,47,50,104,107,119,128,130,],[54,54,54,109,116,54,109,116,]),'arithmetic_symbol':([31,70,73,83,84,],[58,58,58,58,58,]),'binary_logical_operator':([31,70,73,83,84,],[59,59,59,59,59,]),'class_body':([92,],[95,]),'class_part':([92,95,],[96,101,]),'class_method':([92,95,],[97,97,]),'optional_function_body':([104,128,],[107,130,]),'complete_sentences':([104,110,127,128,],[108,117,129,108,]),'class_arguments':([105,106,],[111,113,]),'optional_return':([107,130,],[114,132,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> complete_sentence program','program',2,'p_program','parser.py',25),
  ('program -> complete_sentence','program',1,'p_program','parser.py',26),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',39),
  ('optional_newline -> optional_newline NEWLINE','optional_newline',2,'p_optional_newline','parser.py',44),
  ('optional_newline -> NEWLINE','optional_newline',1,'p_optional_newline','parser.py',45),
  ('optional_newline -> empty','optional_newline',1,'p_optional_newline','parser.py',46),
  ('data_type -> ret_value_operation','data_type',1,'p_data_type','parser.py',63),
  ('data_type -> string_concat','data_type',1,'p_data_type','parser.py',64),
  ('data_type -> function_call','data_type',1,'p_data_type','parser.py',65),
  ('data_type -> NONE','data_type',1,'p_data_type','parser.py',66),
  ('ref_data_type -> ID','ref_data_type',1,'p_ref_data_type','parser.py',72),
  ('ref_data_type -> class_atribute_use','ref_data_type',1,'p_ref_data_type','parser.py',73),
  ('number -> INTEGER','number',1,'p_number','parser.py',79),
  ('number -> FLOAT','number',1,'p_number','parser.py',80),
  ('string -> MULTISTRING','string',1,'p_string','parser.py',85),
  ('string -> STRING','string',1,'p_string','parser.py',86),
  ('string -> number_to_string','string',1,'p_string','parser.py',87),
  ('arithmetic_symbol -> PLUS','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',93),
  ('arithmetic_symbol -> MINUS','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',94),
  ('arithmetic_symbol -> MUL','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',95),
  ('arithmetic_symbol -> DIV','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',96),
  ('arithmetic_symbol -> INT_DIV','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',97),
  ('arithmetic_symbol -> MOD','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',98),
  ('arithmetic_symbol -> POW','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',99),
  ('assignment_symbol -> ADD_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',104),
  ('assignment_symbol -> SUB_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',105),
  ('assignment_symbol -> MUL_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',106),
  ('assignment_symbol -> DIV_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',107),
  ('assignment_symbol -> MOD_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',108),
  ('assignment_symbol -> INT_DIV_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',109),
  ('assignment_symbol -> POW_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',110),
  ('relational_symbol -> EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',115),
  ('relational_symbol -> NOT_EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',116),
  ('relational_symbol -> GREATER','relational_symbol',1,'p_relational_symbol','parser.py',117),
  ('relational_symbol -> LESS','relational_symbol',1,'p_relational_symbol','parser.py',118),
  ('relational_symbol -> GREATER_EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',119),
  ('relational_symbol -> LESS_EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',120),
  ('binary_logical_operator -> AND','binary_logical_operator',1,'p_binary_logical_operator','parser.py',125),
  ('binary_logical_operator -> OR','binary_logical_operator',1,'p_binary_logical_operator','parser.py',126),
  ('conditional_operator -> TRUE','conditional_operator',1,'p_conditional_operator','parser.py',131),
  ('conditional_operator -> FALSE','conditional_operator',1,'p_conditional_operator','parser.py',132),
  ('sentence -> function','sentence',1,'p_sentence','parser.py',141),
  ('sentence -> class','sentence',1,'p_sentence','parser.py',142),
  ('sentence -> return','sentence',1,'p_sentence','parser.py',143),
  ('sentence -> function_call','sentence',1,'p_sentence','parser.py',144),
  ('sentence -> operation','sentence',1,'p_sentence','parser.py',145),
  ('complete_sentence -> sentence','complete_sentence',1,'p_complete_sentence','parser.py',151),
  ('complete_sentences -> complete_sentence complete_sentences','complete_sentences',2,'p_complete_sentences','parser.py',156),
  ('complete_sentences -> complete_sentence','complete_sentences',1,'p_complete_sentences','parser.py',157),
  ('operation -> assignment_operation','operation',1,'p_operation','parser.py',170),
  ('operation -> simple_assignment_operation','operation',1,'p_operation','parser.py',171),
  ('simple_assignment_operation -> ref_data_type ASSIGN data_type','simple_assignment_operation',3,'p_simple_assignment_operation','parser.py',177),
  ('assignment_operation -> ID assignment_symbol number','assignment_operation',3,'p_assignment_operation','parser.py',183),
  ('ret_value_operation -> ret_value_operation arithmetic_symbol ret_value_operation','ret_value_operation',3,'p_ret_value_operation','parser.py',188),
  ('ret_value_operation -> ret_value_operation binary_logical_operator ret_value_operation','ret_value_operation',3,'p_ret_value_operation','parser.py',189),
  ('ret_value_operation -> LPAREN ret_value_operation RPAREN','ret_value_operation',3,'p_ret_value_operation','parser.py',190),
  ('ret_value_operation -> NOT ret_value_operation','ret_value_operation',2,'p_ret_value_operation','parser.py',191),
  ('ret_value_operation -> number','ret_value_operation',1,'p_ret_value_operation','parser.py',192),
  ('ret_value_operation -> ref_data_type','ret_value_operation',1,'p_ret_value_operation','parser.py',193),
  ('relational_operation -> LPAREN relational_operation RPAREN','relational_operation',3,'p_relational_operation','parser.py',204),
  ('relational_operation -> data_type relational_symbol data_type','relational_operation',3,'p_relational_operation','parser.py',205),
  ('term -> relational_operation','term',1,'p_term','parser.py',214),
  ('term -> ref_data_type','term',1,'p_term','parser.py',215),
  ('term -> conditional_operator','term',1,'p_term','parser.py',216),
  ('number_to_string -> STR LPAREN number RPAREN','number_to_string',4,'p_number_to_string','parser.py',226),
  ('string_concat -> string_concat PLUS string','string_concat',3,'p_string_concat','parser.py',231),
  ('string_concat -> string','string_concat',1,'p_string_concat','parser.py',232),
  ('argument -> data_type','argument',1,'p_argument','parser.py',245),
  ('argument -> ID COLON data_type','argument',3,'p_argument','parser.py',246),
  ('arguments -> argument','arguments',1,'p_arguments','parser.py',255),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments','parser.py',256),
  ('arguments -> empty','arguments',1,'p_arguments','parser.py',257),
  ('function_call -> ID LPAREN arguments RPAREN','function_call',4,'p_function_call','parser.py',267),
  ('function_call -> class_atribute_use LPAREN arguments RPAREN','function_call',4,'p_function_call','parser.py',268),
  ('return -> RETURN','return',1,'p_return','parser.py',274),
  ('return -> RETURN data_type','return',2,'p_return','parser.py',275),
  ('optional_return -> return','optional_return',1,'p_optional_return','parser.py',284),
  ('optional_return -> empty','optional_return',1,'p_optional_return','parser.py',285),
  ('optional_function_body -> complete_sentences','optional_function_body',1,'p_optional_function_body','parser.py',291),
  ('optional_function_body -> empty','optional_function_body',1,'p_optional_function_body','parser.py',292),
  ('function -> DEF ID LPAREN arguments RPAREN COLON NEWLINE INDENT optional_function_body optional_return DENT','function',11,'p_function','parser.py',298),
  ('class_arguments -> SELF COMMA arguments','class_arguments',3,'p_class_arguments','parser.py',307),
  ('class_arguments -> SELF','class_arguments',1,'p_class_arguments','parser.py',308),
  ('class_atribute_use -> SELF DOT ID','class_atribute_use',3,'p_class_atribute_use','parser.py',317),
  ('class_method -> DEF __INIT__ LPAREN class_arguments RPAREN COLON NEWLINE INDENT complete_sentences DENT','class_method',10,'p_class_method','parser.py',322),
  ('class_method -> DEF ID LPAREN class_arguments RPAREN COLON NEWLINE INDENT optional_function_body optional_return DENT','class_method',11,'p_class_method','parser.py',323),
  ('class_part -> class_method','class_part',1,'p_class_part','parser.py',332),
  ('class_body -> class_body class_part','class_body',2,'p_class_body','parser.py',338),
  ('class_body -> class_part','class_body',1,'p_class_body','parser.py',339),
  ('class -> CLASS ID COLON NEWLINE INDENT class_body DENT','class',7,'p_class','parser.py',348),
]
