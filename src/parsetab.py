
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD_ASSIGN AND ASSIGN BREAK CLASS COLON COMMA CONTINUE DEF DENT DIV DIV_ASSIGN DOT ELIF ELSE EQUAL FALSE FLOAT FOR GREATER GREATER_EQUAL ID IF IN INDENT INTEGER INT_DIV INT_DIV_ASSIGN ITER LBRACE LBRACKET LESS LESS_EQUAL LPAREN MINUS MOD MOD_ASSIGN MUL MULTISTRING MUL_ASSIGN NEWLINE NEXT NONE NOT NOT_EQUAL OR PASS PLUS POW POW_ASSIGN PRINT RANGE RBRACE RBRACKET RETURN RPAREN SELF SEMICOLON STR STRING SUB_ASSIGN TRUE WHILE __INIT__program : complete_sentence program\n| complete_sentence\ncomplete_sentence : sentence optional_newlinesentence : operation\n| function\n| function_call\n| class\ncomplete_sentences : complete_sentences complete_sentence \n| complete_sentence            \nempty :optional_newline : NEWLINE\n| emptydata_type : ID\n| INTEGER\n| FLOAT\n| STRING\n| MULTISTRING\n| NONE\nnumber : INTEGER \n| FLOATtext : STRING \n| MULTISTRING\n| number_to_stringarithmetic_symbol : PLUS \n| MINUS\n| MUL \n| DIV \n| INT_DIV \n| MOD \n| POWassignment_symbol : ASSIGN \n| ADD_ASSIGN \n| SUB_ASSIGN \n| MUL_ASSIGN \n| DIV_ASSIGN \n| MOD_ASSIGN \n| INT_DIV_ASSIGN \n| POW_ASSIGNrelational_symbol : EQUAL \n| NOT_EQUAL \n| GREATER \n| LESS \n| GREATER_EQUAL \n| LESS_EQUALlogical_operator : AND \n| NOT \n| ORconditional_operator : TRUE \n| FALSEnumber_to_string : STR LPAREN number RPARENassignment_operation : ID assignment_symbol data_typearithmetic_operation : arithmetic_operation arithmetic_symbol arithmetic_operation\n| LPAREN arithmetic_operation RPAREN\n| number \nrelational_operation : ID relational_symbol ID\n| number relational_symbol number\n| text relational_symbol text\noperation : relational_operation \n| arithmetic_operation \n| assignment_operationargument : ID\n| data_type\n| ID COLON data_type\n| SELF\narguments : argument\n| arguments COMMA argument\n| empty\nfunction_call : ID LPAREN arguments RPARENfunction : DEF ID LPAREN arguments RPAREN COLON NEWLINE INDENT complete_sentences DENTclass_constructor : DEF __INIT__ LPAREN arguments RPAREN COLONclass : '
    
_lr_action_items = {'DEF':([0,2,3,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,25,53,57,65,66,67,68,69,70,71,72,73,74,75,79,81,87,88,89,90,91,],[11,11,-10,-4,-5,-6,-7,-58,-59,-60,-54,-19,-20,-21,-22,-23,-3,-11,-12,-54,-52,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,-68,-50,11,11,-9,-69,-8,]),'ID':([0,2,3,4,5,6,7,8,9,10,11,14,16,17,18,19,20,23,24,25,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,57,58,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,87,88,89,90,91,],[12,12,-10,-4,-5,-6,-7,-58,-59,-60,34,-54,-19,-20,-21,-22,-23,-3,-11,-12,59,70,71,-39,-40,-41,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-54,-52,59,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,71,-68,59,-50,12,12,-9,-69,-8,]),'NEWLINE':([0,2,3,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,25,53,57,65,66,67,68,69,70,71,72,73,74,75,79,81,85,87,88,89,90,91,],[-71,-71,24,-4,-5,-6,-7,-58,-59,-60,-54,-19,-20,-21,-22,-23,-3,-11,-12,-54,-52,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,-68,-50,86,-71,-71,-9,-69,-8,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,12,13,14,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,53,57,65,66,67,68,69,70,71,72,73,74,75,79,81,87,88,89,90,91,],[13,13,-10,-4,-5,-6,-7,-58,-59,-60,35,13,-54,-19,-20,-21,-22,-23,56,-3,-11,-12,13,-24,-25,-26,-27,-28,-29,-30,58,-54,-52,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,-68,-50,13,13,-9,-69,-8,]),'INTEGER':([0,2,3,4,5,6,7,8,9,10,13,14,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,87,88,89,90,91,],[16,16,-10,-4,-5,-6,-7,-58,-59,-60,16,-54,-19,-20,-21,-22,-23,-3,-11,-12,16,-24,-25,-26,-27,-28,-29,-30,65,65,-39,-40,-41,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-54,16,16,-52,65,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,65,-68,65,-50,16,16,-9,-69,-8,]),'FLOAT':([0,2,3,4,5,6,7,8,9,10,13,14,16,17,18,19,20,23,24,25,26,27,28,29,30,31,32,33,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,56,57,58,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,87,88,89,90,91,],[17,17,-10,-4,-5,-6,-7,-58,-59,-60,17,-54,-19,-20,-21,-22,-23,-3,-11,-12,17,-24,-25,-26,-27,-28,-29,-30,66,66,-39,-40,-41,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-54,17,17,-52,66,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,66,-68,66,-50,17,17,-9,-69,-8,]),'STRING':([0,2,3,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,25,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,57,58,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,87,88,89,90,91,],[18,18,-10,-4,-5,-6,-7,-58,-59,-60,-54,-19,-20,-21,-22,-23,-3,-11,-12,67,67,-39,-40,-41,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-54,18,-52,67,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,67,-68,67,-50,18,18,-9,-69,-8,]),'MULTISTRING':([0,2,3,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,25,35,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,55,57,58,65,66,67,68,69,70,71,72,73,74,75,78,79,80,81,87,88,89,90,91,],[19,19,-10,-4,-5,-6,-7,-58,-59,-60,-54,-19,-20,-21,-22,-23,-3,-11,-12,68,68,-39,-40,-41,-42,-43,-44,-31,-32,-33,-34,-35,-36,-37,-38,-54,19,-52,68,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,68,-68,68,-50,19,19,-9,-69,-8,]),'STR':([0,2,3,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,25,38,39,40,41,42,43,53,55,57,65,66,67,68,69,70,71,72,73,74,75,79,81,87,88,89,90,91,],[21,21,-10,-4,-5,-6,-7,-58,-59,-60,-54,-19,-20,-21,-22,-23,-3,-11,-12,-39,-40,-41,-42,-43,-44,-54,21,-52,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,-68,-50,21,21,-9,-69,-8,]),'$end':([0,1,2,3,4,5,6,7,8,9,10,14,16,17,18,19,20,22,23,24,25,53,57,65,66,67,68,69,70,71,72,73,74,75,79,81,90,],[-71,0,-2,-10,-4,-5,-6,-7,-58,-59,-60,-54,-19,-20,-21,-22,-23,-1,-3,-11,-12,-54,-52,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,-68,-50,-69,]),'DENT':([3,4,5,6,7,8,9,10,14,16,17,18,19,20,23,24,25,53,57,65,66,67,68,69,70,71,72,73,74,75,79,81,87,88,89,90,91,],[-10,-4,-5,-6,-7,-58,-59,-60,-54,-19,-20,-21,-22,-23,-3,-11,-12,-54,-52,-14,-15,-16,-17,-18,-55,-13,-51,-53,-56,-57,-68,-50,-71,90,-9,-69,-8,]),'PLUS':([9,14,16,17,52,53,57,73,],[27,-54,-19,-20,27,-54,27,-53,]),'MINUS':([9,14,16,17,52,53,57,73,],[28,-54,-19,-20,28,-54,28,-53,]),'MUL':([9,14,16,17,52,53,57,73,],[29,-54,-19,-20,29,-54,29,-53,]),'DIV':([9,14,16,17,52,53,57,73,],[30,-54,-19,-20,30,-54,30,-53,]),'INT_DIV':([9,14,16,17,52,53,57,73,],[31,-54,-19,-20,31,-54,31,-53,]),'MOD':([9,14,16,17,52,53,57,73,],[32,-54,-19,-20,32,-54,32,-53,]),'POW':([9,14,16,17,52,53,57,73,],[33,-54,-19,-20,33,-54,33,-53,]),'EQUAL':([12,14,15,16,17,18,19,20,81,],[38,38,38,-19,-20,-21,-22,-23,-50,]),'NOT_EQUAL':([12,14,15,16,17,18,19,20,81,],[39,39,39,-19,-20,-21,-22,-23,-50,]),'GREATER':([12,14,15,16,17,18,19,20,81,],[40,40,40,-19,-20,-21,-22,-23,-50,]),'LESS':([12,14,15,16,17,18,19,20,81,],[41,41,41,-19,-20,-21,-22,-23,-50,]),'GREATER_EQUAL':([12,14,15,16,17,18,19,20,81,],[42,42,42,-19,-20,-21,-22,-23,-50,]),'LESS_EQUAL':([12,14,15,16,17,18,19,20,81,],[43,43,43,-19,-20,-21,-22,-23,-50,]),'ASSIGN':([12,],[44,]),'ADD_ASSIGN':([12,],[45,]),'SUB_ASSIGN':([12,],[46,]),'MUL_ASSIGN':([12,],[47,]),'DIV_ASSIGN':([12,],[48,]),'MOD_ASSIGN':([12,],[49,]),'INT_DIV_ASSIGN':([12,],[50,]),'POW_ASSIGN':([12,],[51,]),'RPAREN':([16,17,35,52,53,57,58,59,60,61,62,63,64,65,66,67,68,69,71,73,76,77,83,84,],[-19,-20,-10,73,-54,-52,-10,-13,79,-65,-67,-62,-64,-14,-15,-16,-17,-18,-13,-53,81,82,-63,-66,]),'SELF':([35,58,80,],[64,64,64,]),'COMMA':([35,58,59,60,61,62,63,64,65,66,67,68,69,71,77,83,84,],[-10,-10,-13,80,-65,-67,-62,-64,-14,-15,-16,-17,-18,-13,80,-63,-66,]),'NONE':([35,37,44,45,46,47,48,49,50,51,58,78,80,],[69,69,-31,-32,-33,-34,-35,-36,-37,-38,69,69,69,]),'COLON':([59,82,],[78,85,]),'INDENT':([86,],[87,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,],[1,22,]),'complete_sentence':([0,2,87,88,],[2,2,89,91,]),'sentence':([0,2,87,88,],[3,3,3,3,]),'operation':([0,2,87,88,],[4,4,4,4,]),'function':([0,2,87,88,],[5,5,5,5,]),'function_call':([0,2,87,88,],[6,6,6,6,]),'class':([0,2,87,88,],[7,7,7,7,]),'relational_operation':([0,2,87,88,],[8,8,8,8,]),'arithmetic_operation':([0,2,13,26,87,88,],[9,9,52,57,9,9,]),'assignment_operation':([0,2,87,88,],[10,10,10,10,]),'number':([0,2,13,26,54,56,87,88,],[14,14,53,53,74,76,14,14,]),'text':([0,2,55,87,88,],[15,15,75,15,15,]),'number_to_string':([0,2,55,87,88,],[20,20,20,20,20,]),'optional_newline':([3,],[23,]),'empty':([3,35,58,],[25,62,62,]),'arithmetic_symbol':([9,52,57,],[26,26,26,]),'relational_symbol':([12,14,15,],[36,54,55,]),'assignment_symbol':([12,],[37,]),'arguments':([35,58,],[60,77,]),'argument':([35,58,80,],[61,61,84,]),'data_type':([35,37,58,78,80,],[63,72,63,83,63,]),'complete_sentences':([87,],[88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> complete_sentence program','program',2,'p_program','parser.py',12),
  ('program -> complete_sentence','program',1,'p_program','parser.py',13),
  ('complete_sentence -> sentence optional_newline','complete_sentence',2,'p_complete_sentence','parser.py',22),
  ('sentence -> operation','sentence',1,'p_sentence','parser.py',29),
  ('sentence -> function','sentence',1,'p_sentence','parser.py',30),
  ('sentence -> function_call','sentence',1,'p_sentence','parser.py',31),
  ('sentence -> class','sentence',1,'p_sentence','parser.py',32),
  ('complete_sentences -> complete_sentences complete_sentence','complete_sentences',2,'p_complete_sentences','parser.py',38),
  ('complete_sentences -> complete_sentence','complete_sentences',1,'p_complete_sentences','parser.py',39),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',48),
  ('optional_newline -> NEWLINE','optional_newline',1,'p_optional_newline','parser.py',53),
  ('optional_newline -> empty','optional_newline',1,'p_optional_newline','parser.py',54),
  ('data_type -> ID','data_type',1,'p_data_type','parser.py',67),
  ('data_type -> INTEGER','data_type',1,'p_data_type','parser.py',68),
  ('data_type -> FLOAT','data_type',1,'p_data_type','parser.py',69),
  ('data_type -> STRING','data_type',1,'p_data_type','parser.py',70),
  ('data_type -> MULTISTRING','data_type',1,'p_data_type','parser.py',71),
  ('data_type -> NONE','data_type',1,'p_data_type','parser.py',72),
  ('number -> INTEGER','number',1,'p_number','parser.py',78),
  ('number -> FLOAT','number',1,'p_number','parser.py',79),
  ('text -> STRING','text',1,'p_text','parser.py',84),
  ('text -> MULTISTRING','text',1,'p_text','parser.py',85),
  ('text -> number_to_string','text',1,'p_text','parser.py',86),
  ('arithmetic_symbol -> PLUS','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',91),
  ('arithmetic_symbol -> MINUS','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',92),
  ('arithmetic_symbol -> MUL','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',93),
  ('arithmetic_symbol -> DIV','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',94),
  ('arithmetic_symbol -> INT_DIV','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',95),
  ('arithmetic_symbol -> MOD','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',96),
  ('arithmetic_symbol -> POW','arithmetic_symbol',1,'p_arithmetic_symbol','parser.py',97),
  ('assignment_symbol -> ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',102),
  ('assignment_symbol -> ADD_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',103),
  ('assignment_symbol -> SUB_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',104),
  ('assignment_symbol -> MUL_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',105),
  ('assignment_symbol -> DIV_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',106),
  ('assignment_symbol -> MOD_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',107),
  ('assignment_symbol -> INT_DIV_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',108),
  ('assignment_symbol -> POW_ASSIGN','assignment_symbol',1,'p_assignment_symbol','parser.py',109),
  ('relational_symbol -> EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',114),
  ('relational_symbol -> NOT_EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',115),
  ('relational_symbol -> GREATER','relational_symbol',1,'p_relational_symbol','parser.py',116),
  ('relational_symbol -> LESS','relational_symbol',1,'p_relational_symbol','parser.py',117),
  ('relational_symbol -> GREATER_EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',118),
  ('relational_symbol -> LESS_EQUAL','relational_symbol',1,'p_relational_symbol','parser.py',119),
  ('logical_operator -> AND','logical_operator',1,'p_logical_operator','parser.py',124),
  ('logical_operator -> NOT','logical_operator',1,'p_logical_operator','parser.py',125),
  ('logical_operator -> OR','logical_operator',1,'p_logical_operator','parser.py',126),
  ('conditional_operator -> TRUE','conditional_operator',1,'p_conditional_operator','parser.py',131),
  ('conditional_operator -> FALSE','conditional_operator',1,'p_conditional_operator','parser.py',132),
  ('number_to_string -> STR LPAREN number RPAREN','number_to_string',4,'p_number_to_string','parser.py',138),
  ('assignment_operation -> ID assignment_symbol data_type','assignment_operation',3,'p_assignment_operation','parser.py',143),
  ('arithmetic_operation -> arithmetic_operation arithmetic_symbol arithmetic_operation','arithmetic_operation',3,'p_arithmetic_operation','parser.py',149),
  ('arithmetic_operation -> LPAREN arithmetic_operation RPAREN','arithmetic_operation',3,'p_arithmetic_operation','parser.py',150),
  ('arithmetic_operation -> number','arithmetic_operation',1,'p_arithmetic_operation','parser.py',151),
  ('relational_operation -> ID relational_symbol ID','relational_operation',3,'p_relational_operation','parser.py',162),
  ('relational_operation -> number relational_symbol number','relational_operation',3,'p_relational_operation','parser.py',163),
  ('relational_operation -> text relational_symbol text','relational_operation',3,'p_relational_operation','parser.py',164),
  ('operation -> relational_operation','operation',1,'p_operation','parser.py',170),
  ('operation -> arithmetic_operation','operation',1,'p_operation','parser.py',171),
  ('operation -> assignment_operation','operation',1,'p_operation','parser.py',172),
  ('argument -> ID','argument',1,'p_argument','parser.py',177),
  ('argument -> data_type','argument',1,'p_argument','parser.py',178),
  ('argument -> ID COLON data_type','argument',3,'p_argument','parser.py',179),
  ('argument -> SELF','argument',1,'p_argument','parser.py',180),
  ('arguments -> argument','arguments',1,'p_arguments','parser.py',189),
  ('arguments -> arguments COMMA argument','arguments',3,'p_arguments','parser.py',190),
  ('arguments -> empty','arguments',1,'p_arguments','parser.py',191),
  ('function_call -> ID LPAREN arguments RPAREN','function_call',4,'p_function_call','parser.py',200),
  ('function -> DEF ID LPAREN arguments RPAREN COLON NEWLINE INDENT complete_sentences DENT','function',10,'p_function','parser.py',206),
  ('class_constructor -> DEF __INIT__ LPAREN arguments RPAREN COLON','class_constructor',6,'p_class_constructor','parser.py',211),
  ('class -> <empty>','class',0,'p_class','parser.py',215),
]
